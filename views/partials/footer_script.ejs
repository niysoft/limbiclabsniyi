<script src="assets/js/core/jquery.min.js"></script>
<script src="assets/js/core/popper.min.js"></script>
<script src="assets/js/core/bootstrap-material-design.min.js"></script>
<script src="assets/js/plugins/perfect-scrollbar.jquery.min.js"></script>
<!--  Google Maps Plugin    -->
<!--<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB2Yno10-YTnLjjn_Vtk0V8cdcY5lC4plU"></script>-->
<script src="assets/js/plugins/chartist.min.js"></script>
<!--  Notifications Plugin    -->
<script src="assets/js/plugins/bootstrap-notify.js"></script>
<!-- Control Center for Material Dashboard: parallax effects, scripts for the example pages etc -->
<script src="assets/js/material-dashboard.minf066.js?v=2.1.0" type="text/javascript"></script>
<!-- Material Dashboard DEMO methods, don't include it in your project! -->
<script src="assets/demo/demo.js"></script>
<script type="text/javascript" src="assets/js/ajaxForm.js"></script>
<script type="text/javascript" src="assets/js/blockUI.js"></script>
<script src="assets/js/notie.js"></script>

<!--<script src="https://unpkg.com/compromise@latest/builds/compromise.min.js"></script>-->
<script src="assets/js/compromise.min.js"></script>
<script src="assets/js/socket.io.js"></script>
<!-- Client -->
<script src="assets/js/client.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@8"></script>

<script>
    let cookieExpiryHours = 1
    let baseUrl = "", ApiBaseUrl = ""
    if (location.href.includes("localhost")) {
         baseUrl = "http://localhost:3000/"
         ApiBaseUrl = "http://localhost:3000/api/"
    } else {
        baseUrl = "https://limitless-citadel-62887.herokuapp.com"
        ApiBaseUrl = "https://limitless-citadel-62887.herokuapp.com/api/"
    }

    function showSuccess(html) {
        Swal.fire({
            title: '<strong>Your Submitted Numbers</strong>',
            type: 'info',
            html: html,
            showCloseButton: true,
            backdrop: ` rgba(0,0,123,0.4)`,
            cancelButtonAriaLabel: 'Thumbs down'
        })
    }
    function showInvalidDetailsError(message) {
        if(message == ""){
            message = "Error! fill in all required details and choose your numbers to play"
        }
        //let error_string = "Error! fill in all required details and choose your numbers to play"
        md.showNotificationCustom('top', 'center', message)
        $.unblockUI()
    }

    function showInvalidDetailsSuc(message) {
        if(message == ""){
            message = "Error! fill in all required details and choose your numbers to play"
        }
        //let error_string = "Error! fill in all required details and choose your numbers to play"
        md.showNotificationSuc('top', 'center', message)
        $.unblockUI()
    }

    function cookieExist(username) {
        let username1 = getCookie(username);
        return (username1 !== "");
    }
    //setCookie("customerNumber", response['data']['customerDetails']['msisdn'], cookieExpiryDays);
    function setCookie(cname, cvalue, cookieExpiryHours) {
        let d = new Date();
        d.setTime(d.getTime() + (cookieExpiryHours * 60 * 60 * 1000));
        let expires = "expires=" + d.toUTCString();
        document.cookie = cname + "=" + cvalue + "; " + expires;
    }
    //setCookie("customerNumber", "Salaudeen niyi badmus", cookieExpiryHours);
    function getCookie(cname) {
        let name = cname + "=";
        let ca = document.cookie.split(';');
        for (let i = 0; i < ca.length; i++) {
            let c = ca[i];
            while (c.charAt(0) == ' ') {
                c = c.substring(1);
            }
            if (c.indexOf(name) == 0) {
                return c.substring(name.length, c.length);
            }
        }
        return "";
    }

    Number.prototype.formatMoney = function (c, d, t) {
        var n = this,
            c = isNaN(c = Math.abs(c)) ? 2 : c,
            d = d == undefined ? "." : d,
            t = t == undefined ? "," : t,
            s = n < 0 ? "-" : "",
            i = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c))),
            j = (j = i.length) > 3 ? j % 3 : 0;
        return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
    };

    function dateAdd(date, interval, units) {
        if(!(date instanceof Date))
            return undefined;
        var ret = new Date(date); //don't change original date
        var checkRollover = function() { if(ret.getDate() != date.getDate()) ret.setDate(0);};
        switch(String(interval).toLowerCase()) {
            case 'year'   :  ret.setFullYear(ret.getFullYear() + units); checkRollover();  break;
            case 'quarter':  ret.setMonth(ret.getMonth() + 3*units); checkRollover();  break;
            case 'month'  :  ret.setMonth(ret.getMonth() + units); checkRollover();  break;
            case 'week'   :  ret.setDate(ret.getDate() + 7*units);  break;
            case 'day'    :  ret.setDate(ret.getDate() + units);  break;
            case 'hour'   :  ret.setTime(ret.getTime() + units*3600000);  break;
            case 'minute' :  ret.setTime(ret.getTime() + units*60000);  break;
            case 'second' :  ret.setTime(ret.getTime() + units*1000);  break;
            default       :  ret = undefined;  break;
        }
        return ret;
    }

    function adjustBalance(e) {
        let stakeAmount = parseFloat($(e).val())
        let amount = parseFloat($("#stakeAmount").attr("rel"))
        let hold = amount
        if (isNaN(stakeAmount)) {
            stakeAmount = 0
        }
        let finalAmount = amount - stakeAmount
        if (finalAmount < 1) {
            $(e).val(0.0)
            $('.accountBalance').text(hold)
            //setCookie("stakeAmount", stakeAmount, 24)
        } else {
            $('.accountBalance').text(finalAmount.formatMoney(2))
        }
        //console.log(amount + "-" + stakeAmount)
    }

    function makeTimer(timeLeft) {
        setInterval(function () {
            if(timeLeft > 0){
                var hours = Math.floor(timeLeft / 3600);
                var minutes = Math.floor((timeLeft - (hours * 3600)) / 60);
                var seconds = Math.floor((timeLeft - (hours * 3600) - (minutes * 60)));

                if (hours < "10") {
                    hours = "0" + hours;
                }
                if (minutes < "10") {
                    minutes = "0" + minutes;
                }
                if (seconds < "10") {
                    seconds = "0" + seconds;
                }
                $("#hours").html(hours + "<span> h:</span>");
                $("#minutes").html(minutes + "<span>m:</span>");
                $("#seconds").html(seconds + "<span>s</span>");
                timeLeft -= 1
            } else {
                location.reload()
            }

        }, 1000);
    }

    //setInterval(function() { makeTimer(); }, 1000);
</script>
<script>
    $(document).ready(function() {
        md.checkFullPageBackgroundImage();
        setTimeout(function() {
            // after 1000 ms we add the class animated to the login/register card
            $('.card').removeClass('card-hidden');
        }, 700);
    });
</script>
